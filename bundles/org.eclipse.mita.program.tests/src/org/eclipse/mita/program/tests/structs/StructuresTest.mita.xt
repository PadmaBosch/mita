/* XPECT_SETUP org.eclipse.mita.program.tests.structs.StructuresTest 
Workspace {
	Project "testproject" {
	}  
}
END_SETUP */

package test;
import platforms.unittest;

// Structures are custom, user-defined value types for organizing data
struct Foo {
	var bar : uint32;
	var foo : bool;
}


function structTest() : void {
	// Structures can be initialized
	var inst : Foo = Foo(bar = 10, foo = true);
	// Structures can be initialized with positional arguments
	inst = Foo(10, true);
	inst.bar == 10; // true
	// struct members can be set
	inst.bar = 12;
	(inst).bar = 10;
	
	// Structures are initialized with 0
	var inst2 : Foo;
	inst2.bar == 0; // true
	
	// We error on wrong number of arguments
	/* XPECT errors ---
		"Function Foo cannot be used here: arguments don't fit (__args(A) != __args(uint32, bool))" at "Foo(1)"
		"__args(xint8) and __args(uint32, bool) differ in the number of type arguments" at "Foo"
	--- */
	inst = Foo(1);
	/* XPECT errors ---
		"Function Foo cannot be used here: arguments don't fit (__args(A, B, C) != __args(uint32, bool))" at "Foo(1, false, 3)"
		"Incompatible types: bool is not subtype of A." at "Foo"
		"__args(xint8, bool, xint8) and __args(uint32, bool) differ in the number of type arguments" at "Foo"
	--- */
	inst = Foo(1, false, 3);
	// We error on wrong type of arguments
	/* XPECT errors ---
		"Types string<A> and bool are not the same." at "Foo(1, "AHHHH!")"
		"__args isn't structurally a subtype of __args" at "Foo"
		"string<uint32> is not a subtype of bool" at "Foo"
	--- */
	inst = Foo(1, "AHHHH!");
	
	// we can use named parameters to swap argument order
	inst = Foo(foo=true, bar=1);
	inst = Foo(bar=1, foo=true);
	// But named parameters should validate just the same
	
	// We error on wrong number of arguments
	/* XPECT errors ---
		"Function Foo cannot be used here" at "Foo"
		"Too few arguments" at "Foo"
		"prim»i»1 (:: xint8) not compatible with foo (:: bool)" at "foo=1"
	--- */
	inst = Foo(foo=1);
	/* XPECT errors ---
		"Function Foo cannot be used here" at "Foo"
		"Too few arguments" at "Foo"
	--- */
	inst = Foo(bar=1);
	/* XPECT errors ---
		"Duplicate assignment to parameter bar." at "bar=3"
	--- */
	inst = Foo(bar=1, foo=false, bar=3);
	// We error on wrong type of arguments
	/* XPECT errors ---
		"__args isn't structurally a subtype of __args" at "Foo"
		"prim»s»"AHHHH!" (:: string<A>) not compatible with foo (:: bool)" at "foo="AHHHH!""
		"string<uint32> is not a subtype of bool" at "Foo"
	--- */
	inst = Foo(bar=1, foo="AHHHH!");
}
