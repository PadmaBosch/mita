/********************************************************************************
 * Copyright (c) 2017, 2018 Bosch Connected Devices and Solutions GmbH.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * Contributors:
 *    Bosch Connected Devices and Solutions GmbH - initial contribution
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/

package stdlib;

/*
 * # Optionals
 * 
 * A container object which may or may not contain a non-null value. 
 * If a value is present, hasValue() will return true and value() will return the value.
 */

/**
 * Returns true if a value is present, false otherwise
 */
export generated function <T> hasValue(self : optional<T>) : bool
	generator "org.eclipse.mita.library.stdlib.functions.OptionalsHasValueGenerator";

/**
 * Returns the value the optional contains or throws an NoValueException if the
 * optional has no value.
 */
export generated function <T> value(self : optional<T>) : T
	generator "org.eclipse.mita.library.stdlib.functions.OptionalsValueGenerator";

/**
 * Returns an optional without any value */
export generated function <T> none() : optional<T>
 	generator "org.eclipse.mita.library.stdlib.functions.OptionalsNoneGenerator";

/**
 * Returns an optional with some value */
export generated function <T> some(value : T) : optional<T>
 	generator "org.eclipse.mita.library.stdlib.functions.OptionalsSomeGenerator";

/**
 * Exception thrown by value() if the optional does not carry a value.
 */
export exception NoValueException;
